#
# The module build librabbit project.
# 
# On windows, this will build vs project to compile librabbit.
#

set_complie_flags(${LIB_COMPILE_FLAGS})

FILE(GLOB_RECURSE LIB_SOURCES ${ROOT_DIR}/src/*.cpp)
FILE(GLOB_RECURSE LIB_HEADERS ${ROOT_DIR}/include/pump/*.h)
SET(LIB_ALL_FILES ${LIB_SOURCES} ${LIB_HEADERS})

IF(WIN32)
    FOREACH(FILE_NAME ${LIB_ALL_FILES})
        IF("${FILE_NAME}" MATCHES ".cpp")
	        FILE(RELATIVE_PATH REL_FILE_NAME "${ROOT_DIR}/src" ${FILE_NAME})
	    ELSE("${FILE_NAME}" MATCHES ".h")
            FILE(RELATIVE_PATH REL_FILE_NAME "${ROOT_DIR}/include/pump" ${FILE_NAME})
	    ENDIF()
	    GET_FILENAME_COMPONENT(REL_FILE_PATH ${REL_FILE_NAME} DIRECTORY)
	    IF("${REL_FILE_PATH}" STREQUAL "")
	        SOURCE_GROUP("" FILES ${FILE_NAME})
	    ELSE()
	        STRING(REPLACE "/" "\\" REL_FILE_PATH "${REL_FILE_PATH}")
	        SOURCE_GROUP(${REL_FILE_PATH} FILES ${FILE_NAME})
	    ENDIF()
		#MESSAGE(STATUS "path: ${REL_FILE_PATH}===== file: ${FILE_NAME}")
    ENDFOREACH()
ENDIF()

ADD_LIBRARY(${LIBRARY_NAME} SHARED ${LIB_ALL_FILES})

IF(UNIX)
    SET(LINK_LIBS "pthread")
    IF(HAS_GNUTLS)
        SET(LINK_LIBS "${LINK_LIBS} libgnutls.a")
    ENDIF()
ELSEIF(WIN32)
    SET(LINK_LIBS "ws2_32.lib")
    IF(HAS_GNUTLS)
        SET(LINK_LIBS "${LINK_LIBS};libgnutls.dll.a")
    ENDIF()
ENDIF()
TARGET_LINK_LIBRARIES(${LIBRARY_NAME} ${LINK_LIBS})

IF(UNIX)
    INSTALL(DIRECTORY ${ROOT_DIR}/include/ DESTINATION /usr/local/include)
    INSTALL(TARGETS ${LIBRARY_NAME}
            RUNTIME DESTINATION bin
            LIBRARY DESTINATION lib
            ARCHIVE DESTINATION lib)
ENDIF()
